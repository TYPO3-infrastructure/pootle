#!/usr/bin/env bash

. /etc/profile.d/pootle.sh
. /home/pootle/scripts/etc/functions

# -- no need to modify anything below

FORCE_EXTENSION=$1
EXT_PREFIX=TYPO3.ext
EXT_PREFIX_LENGTH=$(($(echo -n ${EXT_PREFIX} | wc -c) + 2))
if [ ! -z "${FORCE_EXTENSION}" ]; then
	EXTENSIONS=${FORCE_EXTENSION}
else
	EXTENSIONS=$(ls ${POOTLE_PO} | grep ${EXT_PREFIX} | cut -b${EXT_PREFIX_LENGTH}-)
fi

cd $(dirname $0)

for EXTNAME in $EXTENSIONS; do
	validProjectName ${EXT_PREFIX}.${EXTNAME} || exit 1

	echo "Packaging $EXTNAME / $(date +'%d.%m.%Y %H:%M:%S')"
	echo -n "   synchronizing store ... "
	pootle sync_stores --project=$EXT_PREFIX.$EXTNAME --force --overwrite >/dev/null 2>&1
	echo "done."

	pushd ${POOTLE_PO}/$EXT_PREFIX.$EXTNAME >/dev/null
	rm -rf ${TER_L10N_PATH}/_$EXTNAME

	_LANGUAGE_PACK_PATH=${TER_L10N_PATH}/${EXTNAME:0:1}/${EXTNAME:1:1}/${EXTNAME}-l10n
	mkdir -p $_LANGUAGE_PACK_PATH
	mkdir -p $STATE_DIR/$EXT_PREFIX.$EXTNAME

	LANGUAGES="$(ls | grep -v templates)"
	for LANG in $LANGUAGES; do
		echo -n "   processing $LANG ... "

		# Compute current state
		STATUS_FILE=$STATE_DIR/$EXT_PREFIX.$EXTNAME/$LANG.time
		if [[ -f $STATUS_FILE && -z "$FORCE_EXTENSION" ]]; then
			LAST_GENERATION=$(cat ${STATUS_FILE})
		else
			LAST_GENERATION=0
		fi
		LAST_EDIT=$(lastedit "$EXT_PREFIX.$EXTNAME" $LANG)
		if [[ $LAST_EDIT -gt 0 && $LAST_EDIT -ne $LAST_GENERATION ]]; then
			mkdir -p ${POOTLE_PO}/_$EXTNAME/$LANG/$EXTNAME
			cp -r $LANG/* ${POOTLE_PO}/_$EXTNAME/$LANG/$EXTNAME
			pushd ${POOTLE_PO}/_$EXTNAME/$LANG/$EXTNAME >/dev/null
			for XLF in $(find . -type f); do
				DIR=$(dirname $XLF)
				FILE=$(basename $XLF)
				mv $XLF $DIR/$LANG.$FILE
			done
			find . -name \*.xlf -exec chmod 644 {} \;
			rm -f $_LANGUAGE_PACK_PATH/$EXTNAME-l10n-$LANG.zip
			# ../ to include $EXTNAME directory
			cd ../
			zip -9 $_LANGUAGE_PACK_PATH/$EXTNAME-l10n-$LANG.zip -r . >/dev/null

			popd >/dev/null

			# Save current state
			echo $LAST_EDIT > $STATUS_FILE
			echo "done."
		else
			echo "skipped."
		fi
	done

	# Create language pack index
	pushd $_LANGUAGE_PACK_PATH >/dev/null

	_LANGUAGE_PACK_NAME=${EXTNAME}-l10n
	_LANGUAGE_INDEX_FILE=${_LANGUAGE_PACK_NAME}.xml
	rm -f $_LANGUAGE_INDEX_FILE
	touch $_LANGUAGE_INDEX_FILE

	echo -e "<?xml version=\"1.0\" standalone=\"yes\" ?>"                   >> $_LANGUAGE_INDEX_FILE
	echo -e "<TERlanguagePackIndex>"                                        >> $_LANGUAGE_INDEX_FILE
	echo -e "\t<meta>"                                                      >> $_LANGUAGE_INDEX_FILE
	echo -e "\t\t<timestamp>$(date +"%s")</timestamp>"                      >> $_LANGUAGE_INDEX_FILE
	echo -e "\t\t<date>$(date +"%F %T")</date>"                             >> $_LANGUAGE_INDEX_FILE
	echo -e "\t</meta>"                                                     >> $_LANGUAGE_INDEX_FILE
	echo -e "\t<languagePackIndex>"                                         >> $_LANGUAGE_INDEX_FILE

	for p in $(find . -name \*.zip | sort);
	do
		_LANGUAGE_KEY=$(echo $p | sed -r "s/.*${_LANGUAGE_PACK_NAME}-(.*)\.zip\$/\1/")
		echo -e "\t\t<languagepack language=\"$_LANGUAGE_KEY\">"      	    >> $_LANGUAGE_INDEX_FILE
		echo -e "\t\t\t<md5>$(md5sum $p | cut -d" " -f1)</md5>"        	    >> $_LANGUAGE_INDEX_FILE
		echo -e "\t\t</languagepack>"                                  	    >> $_LANGUAGE_INDEX_FILE
	done

	echo -e "\t</languagePackIndex>"                                        >> $_LANGUAGE_INDEX_FILE
	echo -e "</TERlanguagePackIndex>"                                       >> $_LANGUAGE_INDEX_FILE

	chmod 644 $_LANGUAGE_INDEX_FILE

	popd >/dev/null

	# Mark changes on directories and fix access rights
	touch ${TER_L10N_PATH}/${EXTNAME:0:1}/${EXTNAME:1:1}/${EXTNAME}-l10n
	chmod 755 ${TER_L10N_PATH}/${EXTNAME:0:1}/${EXTNAME:1:1}/${EXTNAME}-l10n
	touch ${TER_L10N_PATH}/${EXTNAME:0:1}/${EXTNAME:1:1}
	chmod 755 ${TER_L10N_PATH}/${EXTNAME:0:1}/${EXTNAME:1:1}
	touch ${TER_L10N_PATH}/${EXTNAME:0:1}
	chmod 755 ${TER_L10N_PATH}/${EXTNAME:0:1}

	rm -rf ${TER_L10N_PATH}/_$EXTNAME

	popd >/dev/null

	echo "[DONE] Packaging $EXTNAME / $(date +'%d.%m.%Y %H:%M:%S')"
done
